### MATPLOTLIBRC FORMAT

backend      : MacOSX
# backend_fallback: True
interactive  : True
toolbar      : toolbar2   # None | classic | toolbar2
timezone     : UTC        # a pytz timezone string, eg US/Central or Europe/Paris

### LINES
lines.linewidth   : 1.0     # line width in points
# lines.linestyle   : -       # solid line
# lines.color       : purple
# lines.marker      : None    # the default marker
# lines.markeredgewidth  : 0.5     # the line width around the marker symbol
# lines.markersize  : 6            # markersize, in points
# lines.dash_joinstyle : miter        # miter|round|bevel
# lines.dash_capstyle : butt          # butt|round|projecting
# lines.solid_joinstyle : miter       # miter|round|bevel
# lines.solid_capstyle : projecting   # butt|round|projecting
lines.antialiased : True         # render lines in antialised (no jaggies)

### PATCHES
patch.linewidth        : 0.5     # edge width in points
patch.facecolor        : 348ABD # blue
patch.edgecolor        : eeeeee
patch.antialiased      : True    # render patches in antialised (no jaggies)

### FONT
# font.family          : monospace
# font.style          : normal
# font.variant        : normal
# font.weight         : medium
# font.stretch        : normal
font.size           : 10.0
# font.serif          : Bitstream Vera Serif, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
# font.sans-serif     : Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif
# font.cursive        : Apple Chancery, Textile, Zapf Chancery, Sand, cursive
# font.fantasy        : Comic Sans MS, Chicago, Charcoal, Impact, Western, fantasy
font.monospace      : Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace

### TEXT
# text.color          : black

### AXES
# axes.hold           : True    # whether to clear the axes by default on
axes.facecolor      : eeeeee   # axes background color
axes.edgecolor      : bcbcbc   # axes edge color
axes.linewidth      : 1        # edge linewidth
axes.grid           : True     # display grid or not
axes.titlesize      : x-large  # fontsize of the axes title
axes.labelsize      : large    # fontsize of the x any y labels
axes.labelcolor     : 555555
axes.axisbelow      : True     # whether axis gridlines and ticks are below
                               # the axes elements (lines, text, etc)
# axes.formatter.limits : -7, 7 # use scientific notation if log10
                               # of the axis range is smaller than the
                               # first or larger than the second
#axes.unicode_minus  : True    # use unicode for the minus symbol
                               # rather than hypen.  See http://en.wikipedia.org/wiki/Plus_sign#Plus_sign
axes.prop_cycle    : cycler('color', ['348ABD', '7A68A6', 'A60628', '467821', 'CF4457', '188487', 'E24A33'])
                      # 348ABD, 7A68A6, A60628, 467821, CF4457, 188487, E24A33
                      # E24A33 : orange
                      # 7A68A6 : purple
                      # 348ABD : blue
                      # 188487 : turquoise
                      # A60628 : red
                      # CF4457 : pink
                      # 467821 : green

#polaraxes.grid      : True    # display grid on polar axes
#axes3d.grid         : True    # display grid on 3d axes

### TICKS
# see http://matplotlib.sourceforge.net/api/axis_api.html#matplotlib.axis.Tick
xtick.major.size     : 0      # major tick size in points
xtick.minor.size     : 0      # minor tick size in points
xtick.major.pad      : 6      # distance to major tick label in points
xtick.minor.pad      : 6      # distance to the minor tick label in points
xtick.color          : 555555      # color of the tick labels
#xtick.labelsize      : medium # fontsize of the tick labels
xtick.direction      : in     # direction: in or out

ytick.major.size     : 0      # major tick size in points
ytick.minor.size     : 0      # minor tick size in points
ytick.major.pad      : 6      # distance to major tick label in points
ytick.minor.pad      : 6      # distance to the minor tick label in points
ytick.color          : 555555      # color of the tick labels
#ytick.labelsize      : medium # fontsize of the tick labels
ytick.direction      : in     # direction: in or out


### GRIDS
# grid.color       :   black   # grid color
# grid.linestyle   :   :       # dotted
# grid.linewidth   :   0.5     # in points

### Legend
# legend.fancybox      : True  # if True, use a rounded box for the legend
# legend.isaxes        : True
# legend.numpoints     : 2      # the number of points in the legend line
legend.fontsize      : 10
# legend.framealpha    : 0.5
# legend.pad           : 0.0    # deprecated; the fractional whitespace inside the legend border
# legend.borderpad     : 0.5    # border whitspace in fontsize units
# legend.markerscale   : 1.0    # the relative size of legend markers vs. original
# the following dimensions are in axes coords
# legend.labelsep      : 0.010  # the vertical space between the legend entries
# legend.handlelen     : 0.05   # the length of the legend lines
# legend.handletextsep : 0.02   # the space between the legend line and legend text
# legend.axespad       : 0.02   # the border between the axes and legend edge
# legend.shadow        : False

### FIGURE
# See http://matplotlib.sourceforge.net/api/figure_api.html#matplotlib.figure.Figure
figure.figsize   : 11, 8    # figure size in inches
# figure.dpi       : 80      # figure dots per inch
figure.facecolor : 0.85    # figure facecolor; 0.75 is scalar gray
figure.edgecolor : 0.50   # figure edgecolor

# The figure subplot parameters.  All dimensions are fraction of the
# figure width or height
#figure.subplot.left    : 0.125  # the left side of the subplots of the figure
#figure.subplot.right   : 0.9    # the right side of the subplots of the figure
#figure.subplot.bottom  : 0.1    # the bottom of the subplots of the figure
#figure.subplot.top     : 0.9    # the top of the subplots of the figure
#figure.subplot.wspace  : 0.2    # the amount of width reserved for blank space between subplots
figure.subplot.hspace  : 0.5    # the amount of height reserved for white space between subplots

### IMAGES
#image.aspect : equal             # equal | auto | a number
#image.interpolation  : bilinear  # see help(imshow) for options
#image.cmap   : jet               # gray | jet etc...
#image.lut    : 256               # the size of the colormap lookup table
#image.origin : upper             # lower | upper
#image.resample  : False

### CONTOUR PLOTS
#contour.negative_linestyle :  dashed # dashed | solid

### Agg rendering
### Warning: experimental, 2008/10/10
#agg.path.chunksize : 0           # 0 to disable; values in the range
                                  # 10000 to 100000 can improve speed slightly
                                  # and prevent an Agg rendering failure
                                  # when plotting very large data sets,
                                  # especially if they are very gappy.
                                  # It may cause minor artifacts, though.
                                  # A value of 20000 is probably a good
                                  # starting point.
### SAVING FIGURES
#path.simplify : True   # When True, simplify paths by removing "invisible"
                        # points to reduce file size and increase rendering
                        # speed
#path.simplify_threshold : 0.1  # The threshold of similarity below which
                                # vertices will be removed in the simplification
                                # process
#path.snap : True # When True, rectilinear axis-aligned paths will be snapped to
                  # the nearest pixel when certain criteria are met.  When False,
                  # paths will never be snapped.

# the default savefig params can be different from the display params
# Eg, you may want a higher resolution, or to make the figure
# background white
#savefig.dpi       : 100      # figure dots per inch
#savefig.facecolor : white    # figure facecolor when saving
#savefig.edgecolor : white    # figure edgecolor when saving
#savefig.extension : auto     # what extension to use for savefig('foo'), or 'auto'

#cairo.format      : png      # png, ps, pdf, svg

# tk backend params
#tk.window_focus   : False    # Maintain shell focus for TkAgg

# ps backend params
#ps.papersize      : letter   # auto, letter, legal, ledger, A0-A10, B0-B10
#ps.useafm         : False    # use of afm fonts, results in small files
#ps.usedistiller   : False    # can be: None, ghostscript or xpdf
                                          # Experimental: may produce smaller files.
                                          # xpdf intended for production of publication quality files,
                                          # but requires ghostscript, xpdf and ps2eps
#ps.distiller.res  : 6000      # dpi
#ps.fonttype       : 3         # Output Type 3 (Type3) or Type 42 (TrueType)

# pdf backend params
#pdf.compression   : 6 # integer from 0 to 9
                       # 0 disables compression (good for debugging)
#pdf.fonttype       : 3         # Output Type 3 (Type3) or Type 42 (TrueType)

# svg backend params
#svg.image_inline : True       # write raster image data directly into the svg file
#svg.image_noscale : False     # suppress scaling of raster data embedded in SVG
#svg.embed_char_paths : True       # embed character outlines in the SVG file

# docstring params
#docstring.hardcopy = False  # set this when you want to generate hardcopy docstring

# Set the verbose flags.  This controls how much information
# matplotlib gives you at runtime and where it goes.  The verbosity
# levels are: silent, helpful, debug, debug-annoying.  Any level is
# inclusive of all the levels below it.  If your setting is "debug",
# you'll get all the debug and helpful messages.  When submitting
# problems to the mailing-list, please set verbose to "helpful" or "debug"
# and paste the output into your report.
#
# The "fileo" gives the destination for any calls to verbose.report.
# These objects can a filename, or a filehandle like sys.stdout.
#
# You can override the rc default verbosity from the command line by
# giving the flags --verbose-LEVEL where LEVEL is one of the legal
# levels, eg --verbose-helpful.
#
# You can access the verbose instance in your code
#   from matplotlib import verbose.
#verbose.level  : silent      # one of silent, helpful, debug, debug-annoying
#verbose.fileo  : sys.stdout  # a log filename, sys.stdout or sys.stderr

# Event keys to interact with figures/plots via keyboard.
# Customize these settings according to your needs.
# Leave the field(s) empty if you don't need a key-map. (i.e., fullscreen : '')

keymap.fullscreen : f               # toggling
keymap.home : h, r, home            # home or reset mnemonic
keymap.back : left, c, backspace    # forward / backward keys to enable
keymap.forward : right, v           #   left handed quick navigation
keymap.pan : p                      # pan mnemonic
keymap.zoom : o                     # zoom mnemonic
keymap.save : s                     # saving current figure
keymap.grid : g                     # switching on/off a grid in current axes
keymap.yscale : l                   # toggle scaling of y-axes ('log'/'linear')
keymap.xscale : L, k                # toggle scaling of x-axes ('log'/'linear')
keymap.all_axes : a                 # enable all axes
